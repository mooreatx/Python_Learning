

1. Why are functions advantageous to have in your programs? Compartanizes code with local variables, makes it easier to troubleshoot



2. When does the code in a function execute: when the function is defined or when the function is called? When the function is called



3. What statement creates a function? DEF



4. What is the difference between a function and a function call? Function is a block of code, function call executes the function



5. How many global scopes are there in a Python program? How many local scopes? 1, infinite



6. What happens to variables in a local scope when the function call returns? it's terminiated 



7. What is a return value? Can a return value be part of an expression? The value that a function call evaluates to, yes



8. If a function does not have a return statement, what is the return value of a call to that function? None



9. How can you force a variable in a function to refer to the global variable? use the statement global at the beginning of the function



10. What is the data type of None? NoneType



11. What does the import areallyourpetsnamederic statement do? Imports entire code from that module



12. If you had a function named bacon() in a module named spam, how would you call it after importing spam? bacon()



13. How can you prevent a program from crashing when it gets an error? using try and except clauses



14. What goes in the try clause? What goes in the except clause? Attempt to run code even if it may throw an exception error, ignore exception error and keep running code